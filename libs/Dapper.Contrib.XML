<?xml version="1.0"?>
<doc>
    <assembly>
        <name>Dapper.Contrib</name>
    </assembly>
    <members>
        <member name="M:Dapper.Contrib.Extensions.SqlMapperExtensions.Get``1(System.Data.IDbConnection,System.Object,System.Data.IDbTransaction,System.Nullable{System.Int32})">
            <summary>
            Returns a single entity by a single id from table "Ts". T must be of interface type. 
            Id must be marked with [Key] attribute.
            Created entity is tracked/intercepted for changes and used by the Update() extension. 
            </summary>
            <typeparam name="T">Interface type to create and populate</typeparam>
            <param name="connection">Open SqlConnection</param>
            <param name="id">Id of the entity to get, must be marked with [Key] attribute</param>
            <returns>Entity of T</returns>
        </member>
        <member name="M:Dapper.Contrib.Extensions.SqlMapperExtensions.Insert``1(System.Data.IDbConnection,``0,System.Data.IDbTransaction,System.Nullable{System.Int32})">
            <summary>
            Inserts an entity into table "Ts" and returns identity id.
            </summary>
            <param name="connection">Open SqlConnection</param>
            <param name="entityToInsert">Entity to insert</param>
            <returns>Identity of inserted entity</returns>
        </member>
        <member name="M:Dapper.Contrib.Extensions.SqlMapperExtensions.Update``1(System.Data.IDbConnection,``0,System.Data.IDbTransaction,System.Nullable{System.Int32})">
            <summary>
            Updates entity in table "Ts", checks if the entity is modified if the entity is tracked by the Get() extension.
            </summary>
            <typeparam name="T">Type to be updated</typeparam>
            <param name="connection">Open SqlConnection</param>
            <param name="entityToUpdate">Entity to be updated</param>
            <returns>true if updated, false if not found or not modified (tracked entities)</returns>
        </member>
        <member name="M:Dapper.Contrib.Extensions.SqlMapperExtensions.Delete``1(System.Data.IDbConnection,``0,System.Data.IDbTransaction,System.Nullable{System.Int32})">
            <summary>
            Delete entity in table "Ts".
            </summary>
            <typeparam name="T">Type of entity</typeparam>
            <param name="connection">Open SqlConnection</param>
            <param name="entityToDelete">Entity to delete</param>
            <returns>true if deleted, false if not found</returns>
        </member>
        <member name="M:Dapper.Contrib.Extensions.SqlMapperExtensions.DeleteAll``1(System.Data.IDbConnection,System.Data.IDbTransaction,System.Nullable{System.Int32})">
            <summary>
            Delete all entities in the table related to the type T.
            </summary>
            <typeparam name="T">Type of entity</typeparam>
            <param name="connection">Open SqlConnection</param>
            <returns>true if deleted, false if none found</returns>
        </member>
    </members>
</doc>
